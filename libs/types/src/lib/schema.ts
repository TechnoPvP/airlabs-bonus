/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    get: operations["AppController_getData"];
  };
  "/v1": {
    get: operations["AppController_getData"];
  };
  "/v1/employees": {
    get: operations["EmployeesController_list"];
    post: operations["EmployeesController_create"];
  };
  "/v1/employees/batch": {
    post: operations["EmployeesController_batchUploadReports"];
  };
  "/v1/employees/{id}": {
    get: operations["EmployeesController_retrive"];
    delete: operations["EmployeesController_remove"];
    patch: operations["EmployeesController_update"];
  };
  "/v1/reports": {
    get: operations["ReportsController_list"];
    post: operations["ReportsController_create"];
  };
  "/v1/employees/{employeeId}/reports": {
    get: operations["ReportsController_listByEmployee"];
  };
  "/v1/reports/bonus": {
    get: operations["ReportsController_runBonusReport"];
  };
  "/v1/reports/batch": {
    post: operations["ReportsController_batchUploadReports"];
  };
  "/v1/reports/{id}": {
    get: operations["ReportsController_retrive"];
    delete: operations["ReportsController_remove"];
    patch: operations["ReportsController_update"];
  };
  "/v1/danger-zones": {
    get: operations["DangerZonesController_list"];
    post: operations["DangerZonesController_create"];
  };
  "/v1/danger-zones/{id}": {
    get: operations["DangerZonesController_retrive"];
    delete: operations["DangerZonesController_remove"];
    patch: operations["DangerZonesController_update"];
  };
  "/v1/automation/run": {
    post: operations["AutomationController_run"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CreateEmployeeDto: {
      contract_type: string;
      employment_type: string;
      agency: string;
      emp_no: string;
      homebase: string;
      human_resource_full_name: string;
      human_resource_brq: string;
      human_resource_rank: string;
      /** @enum {string} */
      type?: "FLIGHT" | "CABIN";
    };
    UpdateEmployeeDto: Record<string, never>;
    CreateReportDto: {
      start_date: string;
      from_date: string;
      to_date: string;
      code?: string;
      registration: string;
      dep_string: string;
      arr_string: string;
      vehicle_type?: string;
      roster_designators?: string;
      project_name_text?: string;
      employee_id: number;
    };
    EmployeeEntity: {
      contract_type: string;
      employment_type: string;
      agency: string;
      emp_no: string;
      homebase: string;
      human_resource_full_name: string;
      human_resource_brq: string;
      human_resource_rank: string;
      /** @enum {string} */
      type?: "FLIGHT" | "CABIN";
      id: number;
    };
    ReportEntity: {
      start_date: string;
      from_date: string;
      to_date: string;
      registration: string;
      dep_string: string;
      arr_string: string;
      vehicle_type?: string;
      roster_designators?: string;
      project_name_text?: string;
      employee_id: number;
      id: number;
      employeee: components["schemas"]["EmployeeEntity"];
      scheduled_hours_duration: string;
      code: string;
    };
    BatchGetReportDto: {
      id: string;
      emp_no: string;
      bonus: number;
      perDiems: number;
      vnoPerDiems: number;
    };
    UpdateReportDto: {
      start_date?: string;
      from_date?: string;
      to_date?: string;
      code?: string;
      registration?: string;
      dep_string?: string;
      arr_string?: string;
      vehicle_type?: string;
      roster_designators?: string;
      project_name_text?: string;
    };
    CreateDangerZoneDto: {
      zone: string;
    };
    DangerZoneEntity: {
      zone: string;
      id: number;
    };
    UpdateDangerZoneDto: {
      zone?: string;
    };
    CreateAutomationDto: Record<string, never>;
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  AppController_getData: {
    responses: {
      200: never;
    };
  };
  EmployeesController_list: {
    responses: {
      200: {
        content: {
          "application/json": (components["schemas"]["CreateEmployeeDto"])[];
        };
      };
    };
  };
  EmployeesController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateEmployeeDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["CreateEmployeeDto"];
        };
      };
    };
  };
  EmployeesController_batchUploadReports: {
    responses: {
      201: never;
    };
  };
  EmployeesController_retrive: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["CreateEmployeeDto"];
        };
      };
    };
  };
  EmployeesController_remove: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["CreateEmployeeDto"];
        };
      };
    };
  };
  EmployeesController_update: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateEmployeeDto"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["CreateEmployeeDto"];
        };
      };
    };
  };
  ReportsController_list: {
    responses: {
      200: {
        content: {
          "application/json": (components["schemas"]["ReportEntity"])[];
        };
      };
    };
  };
  ReportsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateReportDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["ReportEntity"];
        };
      };
    };
  };
  ReportsController_listByEmployee: {
    parameters: {
      query?: {
        start_date?: string;
        end_date?: string;
      };
      path: {
        employeeId: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": (components["schemas"]["ReportEntity"])[];
        };
      };
    };
  };
  ReportsController_runBonusReport: {
    parameters: {
      query: {
        month: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": (components["schemas"]["BatchGetReportDto"])[];
        };
      };
    };
  };
  ReportsController_batchUploadReports: {
    responses: {
      201: never;
    };
  };
  ReportsController_retrive: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ReportEntity"];
        };
      };
    };
  };
  ReportsController_remove: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ReportEntity"];
        };
      };
    };
  };
  ReportsController_update: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateReportDto"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ReportEntity"];
        };
      };
    };
  };
  DangerZonesController_list: {
    responses: {
      200: {
        content: {
          "application/json": (components["schemas"]["DangerZoneEntity"])[];
        };
      };
    };
  };
  DangerZonesController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateDangerZoneDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["DangerZoneEntity"];
        };
      };
    };
  };
  DangerZonesController_retrive: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DangerZoneEntity"];
        };
      };
    };
  };
  DangerZonesController_remove: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DangerZoneEntity"];
        };
      };
    };
  };
  DangerZonesController_update: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateDangerZoneDto"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DangerZoneEntity"];
        };
      };
    };
  };
  AutomationController_run: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateAutomationDto"];
      };
    };
    responses: {
      201: never;
    };
  };
}
